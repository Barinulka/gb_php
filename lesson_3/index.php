<?

    // 1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.
    echo "Задание 1. <br>";
    $i = 0;
    $str = "";

    while ($i <= 100) {
        if ($i % 3 == 0)
            $str .= "$i ";

        $i++;
    }

    echo $str;
    echo "<br> <hr>";
?>

<?
    // 2. С помощью цикла do...while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
    // 0 – это ноль.
    // 1 – нечётное число.
    // 2 – чётное число.
    // 3 – нечётное число.
    // ...
    // 10 – чётное число.
    echo "Задание 2. <br>";

    $i = 0;

    do {
        if ($i == 0)
            echo "$i - это ноль <br>";
        else if ($i % 2 == 0)
            echo "$i - четное число <br>";
        else
            echo "$i - нечетное число <br>";

        $i++;
    } while ($i <= 10);

    echo "<br> <hr>";
?>

<!--
    3.  Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в
        качестве значений – массивы с названиями городов из соответствующей области.
        Вывести в цикле значения массива, чтобы результат был таким:
        Московская область:
        Москва, Зеленоград, Клин.
        Ленинградская область:
        Санкт-Петербург, Всеволожск, Павловск, Кронштадт.
        Рязанская область...(названия городов можно найти на maps.yandex.ru)
 -->
<?
    $regions = array(
        'Московская область' => array('Москва', 'Зеленоград', 'Клин'),
        'Ленинградская область' => array('Санкт-Петербург', 'Всеволожск', 'Кронштадт', 'Павловск'),
        'Рязанская область' => array('Рязань', 'Касимов', 'Скопин'),
    );

    echo "Задание 3 + 8*<br>";
?>
<ul>
    <? foreach ($regions as $region => $cities) : ?>
        <li>
            <?= "$region:"; ?>
            <ul>
                <? foreach ($cities as $city) : ?>
                    <? if (mb_substr($city, 0, 1) == "К") : ?> <!-- 8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К». -->
                        <li><?= $city; ?></li>
                    <? endif; ?>
                <? endforeach; ?>
            </ul>
        </li>
    <? endforeach; ?>
</ul>

<br> <hr>

<!--
    4. Объявить массив, индексами которого являются буквы русского языка, а значениями –
    соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, ..., ‘э’ => ‘e’,
    ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
    Написать функцию транслитерации строк.

    9. *Объединить две ранее написанные функции в одну, которая получает строку на русском
        языке, производит транслитерацию и замену пробелов на подчеркивания (аналогичная задача
        решается при конструировании url-адресов на основе названия статьи в блогах)

    Данный вариант можно решить добавив в конец массива LETTERS ' ' => '_'
-->
<?

    echo "Задание 4 + 9*<br>";
    define('LETTERS', array(
            'а' => 'a', 'б' => 'b', 'в' => 'v', 'г' => 'g', 'д' => 'd',
    		'е' => 'e', 'ё' => 'yo', 'ж' => 'zh', 'з' => 'z', 'и' => 'i',
    		'й' => 'j', 'к' => 'k', 'л' => 'l', 'м' => 'm', 'н' => 'n',
    		'о' => 'o', 'п' => 'p', 'р' => 'r', 'с' => 's', 'т' => 't',
    		'у' => 'u', 'ф' => 'f', 'х' => 'h', 'ц' => 'c', 'ч' => 'ch',
    		'ш' => 'sh', 'щ' => 'csh', 'ь' => '', 'ы' => 'y', 'ъ' => '',
    		'э' => 'e', 'ю' => 'yu', 'я' => 'ya', ' ' => '_'
        )
    );

    function translitter ($str) {

        return str_replace(array_keys(LETTERS), array_values(LETTERS), mb_strtolower($str));

    }

    echo translitter("Транслитерация строки");
    echo "<br><hr>";
?>

<!--
    5. Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает
    видоизмененную строчку.
-->

<?
    echo "Задание 5<br>";
    function replacer ($str) {
        return str_replace(" ", "_", $str);
    }

    echo replacer("Заменяем пробел на подчеркивание");
    echo "<br><hr>";
?>

<!--
6. В имеющемся шаблоне сайта заменить статичное меню (ul - li) на генерируемое через PHP.
Необходимо представить пункты меню как элементы массива и вывести их циклом. Подумать,
как можно реализовать меню с вложенными подменю? Попробовать его реализовать.
-->
<?
    echo "Задание 6<br>";
    $tree = array(
        'Type_1' => array('Type_1_1' => 'type-1-1', 'Type_1_2' => 'type-1-2', 'Type_1_3' => 'type-1-3'),
        'Type_2' => array('Type_2_1' => 'type-2-1', 'Type_2_2' => 'type-2-2', 'Type_2_3' => 'type-2-3'),
        'Type_3' => array('Type_3_1' => 'type-3-1', 'Type_3_2' => 'type-3-2', 'Type_3_3' => 'type-3-3',),
        'Type_4' => array('Type_4_1' => 'type-4-1', 'Type_4_2' => array('Type_4_2_1' => 'type-4-2-1', 'Type_4_2_2' => 'type-4-2-2'), 'Type_4_3' => 'type-4-3',),
        'Type_5' => 'Type_5_1',
    );

    function getMenu ($tree) {
        $menu = "<ul>";

        foreach ($tree as $name => $names) {
            if (is_array($names)) {
                $menu .= "<li>$name";
                $menu .= getMenu($names);
                $menu .= "</li>";
            } else {
                $menu .= "<li>$name</li>";
            }
        }

        $menu .= "</ul>";

        return $menu;
    }

    echo getMenu($tree);
    echo "<br><hr>";
?>

<!-- 7. *Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла.  -->
<?
    echo "Задание 7<br>";
    for($i = 0; $i < 10; print($i++." ")){}
    echo "<br><hr>";
?>
